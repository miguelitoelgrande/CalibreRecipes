#!/usr/bin/env  python2

__license__   = 'GPL v3'
__copyright__ = '2015, MM'

'''
InsideParadeplatz.ch
'''

from calibre.web.feeds.recipes import BasicNewsRecipe

class InsideParadeplatz(BasicNewsRecipe):
    title                 = 'InsideParadeplatz.ch'
    __author__            = 'MM'
    description           = 'Flurfunk'
    publisher             = 'LH'
    category              = 'gosip'
    oldest_article        = 14
    max_articles_per_feed = 100
    no_stylesheets        = True
    use_embedded_content  = False
    language              = 'de'

    conversion_options = {
                             'comments'  : description
                            ,'tags'      : category
                            ,'language'  : language
                            ,'publisher' : publisher
                         }
    
    keep_only_tags = dict(name='div', attrs={'id':'primary', 'class':'content-area'}) 
   
           
    remove_tags = [
                     dict(name=['object','link','base','meta','iframe'])
                    ,dict(name='div', attrs={'class':'comment-respond'}) 
					,dict(name='div', attrs={'class':'entry-sharing'}) 
					,dict(name='div', attrs={'class':'sharedaddy sd-sharing-enabled'}) 					
                  ]

    feeds = [
		 ( u'http://insideparadeplatz.ch/feed/')     
     ]


    def preprocess_html(self, soup):
        # remove all <a href=""> tags as those are annoying in documents on touch screen page flipping...
        # idea: http://www.mobileread.com/forums/showthread.php?t=124215
        for alink in soup.findAll('a'):			
            if alink.has_key('href') :
                if alink['href'][:4] == "http" : # only replace external links for the moment.
                    del alink['href']
#            if alink.string is not None:
#                tstr = '<span style="text-decoration: underline;">' + alink.string + '</span>'
#                if alink['href'][:4] == "http" : # only replace external links for the moment.
#                    alink.replaceWith(tstr)
#            else :                
#                #tstr =  '<span style="text-decoration: underline;">' + alink.contents + '</span>'
#                del alink['href']
#                #alink.unwrap()
        return soup
